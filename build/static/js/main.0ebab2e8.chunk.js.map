{"version":3,"sources":["hooks/useValidation.js","components/Step1.js","components/Student.js","hooks/useStudents.js","components/Step2.js","components/Stein.js","components/Finish.js","hooks/useSteps.js","hooks/useRegistration.js","constants.js","pages/Register.js","hooks/useSearch.js","pages/Reregister.js","pages/Confirmation.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["useValidation","_useState","useState","_useState2","Object","slicedToArray","Step1","_ref","steps","registrations","addCurrentStep","step","registration","backCurrentStep","setRegistration","_useValidation","_useValidation2","validated","setValidated","addToRegistration","obj","parentInfo","objectSpread","react_default","a","createElement","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","Group","controlId","Label","Control","required","placeholder","type","value","parentName","onChange","e","target","email","Row","as","Col","phone","otherPhone","address","address2","city","state","undefined","zip","ButtonGroup","Button","variant","Student","props","studentList","setStudents","handleChange","fieldName","defineProperty","Container","style","borderColor","borderWidth","borderStyle","borderRadius","padding","backgroundColor","marginTop","krName","engName","birthdate","grade","Check","paddingLeft","inline","label","name","checked","gender","fluency","religion","dietaryNotes","comments","id","classDay","useStudents","students","Step2","components_Student","onClick","marginLeft","store","SteinStore","username","password","writeRegistration","append","authentication","then","res","console","log","window","location","href","catch","err","_callee","regenerator_default","wrap","_context","prev","next","read","search","data","abrupt","sent","stop","Stein","writeToDatabase","student","searchDatabase","Finish","handleSubmit","_ref2","asyncToGenerator","mark","_x","apply","this","arguments","float","useSteps","setSteps","useRegistration","currentStep","constants","Register","_useSteps","_useRegistration","_useStudents","Constants","components_Step1","components_Step2","components_Finish","useSearch","setEmail","_useState3","_useState4","results","setResults","Home","_useSearch","handleRegister","_callee3","_context3","forEach","_ref3","_callee2","element","_context2","_x3","_x2","length","map","Confirmation","Container_default","className","src","Button_default","App","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","es","pages_Home","path","pages_Register","pages_Confirmation","Reregister","color","fontSize","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.0ebab2e8.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction useValidation() {\r\n    const [validation, setValidation] = useState(false);\r\n\r\n    return [validation, setValidation];\r\n}\r\n\r\nexport default useValidation;","import React from 'react';\r\nimport useValidation from '../hooks/useValidation';\r\nimport { Form, Col, Button, ButtonGroup } from 'react-bootstrap';\r\n\r\nconst Step1 = ({steps, registrations}) => {\r\n    const {step, addCurrentStep, backCurrentStep} = steps;\r\n    const {registration, setRegistration} = registrations;\r\n\r\n    const [validated, setValidated] = useValidation();\r\n    const handleSubmit = event => {\r\n        const form = event.currentTarget;\r\n        if (!form.checkValidity()) {\r\n            setValidated(true);\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        } else {\r\n            setValidated(false);\r\n            addCurrentStep();\r\n        }\r\n      };\r\n    const addToRegistration = (obj) => {\r\n        let parentInfo = {...registration, ...obj};\r\n        setRegistration(parentInfo);\r\n    }\r\n\r\n  return (\r\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <h3>Parent Information</h3>\r\n        <Form.Group controlId=\"formGridName\">\r\n            <Form.Label>성명 | Full Name *</Form.Label>\r\n            <Form.Control required placeholder=\"Name\" type=\"text\"\r\n                \r\n                value={\r\n                    registration.parentName ? registration.parentName : ''\r\n                }\r\n                onChange={e => {\r\n                    addToRegistration({parentName: e.target.value});\r\n                }}/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formGridEmail\">\r\n            <Form.Label>Email *</Form.Label>\r\n            <Form.Control required type=\"email\" placeholder=\"Enter email\" \r\n                value={\r\n                    registration.email ? registration.email : ''\r\n                }\r\n                onChange={e => {\r\n                    addToRegistration({email: e.target.value});\r\n                }}/>\r\n        </Form.Group>\r\n        <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridPhone\">\r\n            <Form.Label>전화 번호 | Phone Number *</Form.Label>\r\n            <Form.Control required type=\"phone\" placeholder=\"Primary Phone #\" \r\n                value={\r\n                    registration.phone ? registration.phone : ''\r\n                }\r\n                onChange={e => {\r\n                    addToRegistration({phone: e.target.value});\r\n                }}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridPhone\">\r\n            <Form.Label>비상 연락 번호 | Emergency Phone Number</Form.Label>\r\n            <Form.Control type=\"phone\" placeholder=\"Emergency Phone #\" \r\n                value={\r\n                    registration.otherPhone ? registration.otherPhone : ''\r\n                }\r\n                onChange={e => {\r\n                    addToRegistration({otherPhone: e.target.value});\r\n                }}/>\r\n            </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Group controlId=\"formGridAddress1\">\r\n            <Form.Label>Address *</Form.Label>\r\n            <Form.Control required placeholder=\"1234 Main St\" \r\n                value={\r\n                    registration.address ? registration.address : ''\r\n                }\r\n                onChange={e => {\r\n                    addToRegistration({address: e.target.value});\r\n                }}/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formGridAddress2\">\r\n            <Form.Label>Address 2</Form.Label>\r\n            <Form.Control placeholder=\"Apartment, studio, or floor\" \r\n                value={\r\n                    registration.address2 ? registration.address2 : ''\r\n                }\r\n                onChange={e => {\r\n                    addToRegistration({address2: e.target.value});\r\n                }}/>\r\n        </Form.Group>\r\n\r\n        <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridCity\">\r\n            <Form.Label>City *</Form.Label>\r\n            <Form.Control required placeholder=\"Seattle\"\r\n                value={\r\n                    registration.city ? registration.city : ''\r\n                }\r\n                onChange={e => {\r\n                    addToRegistration({city: e.target.value});\r\n                }}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridState\">\r\n            <Form.Label>State</Form.Label>\r\n            <Form.Control as=\"select\" required\r\n                value={\r\n                    registration.state ? registration.state : undefined\r\n                }\r\n                onChange={e => {\r\n                    addToRegistration({state: e.target.value});\r\n                }}>\r\n                <option>Choose...</option>\r\n                <option>WA</option>\r\n                <option>Other</option>\r\n            </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridZip\">\r\n            <Form.Label>Zip *</Form.Label>\r\n            <Form.Control required \r\n                value={\r\n                    registration.zip ? registration.zip : ''\r\n                }\r\n                onChange={e => {\r\n                    addToRegistration({zip: e.target.value});\r\n                }}/>\r\n            </Form.Group>\r\n        </Form.Row>\r\n\r\n        <ButtonGroup>\r\n            <Button\r\n                variant=\"info\" \r\n                type=\"submit\"\r\n                >\r\n                Next >\r\n            </Button>\r\n        </ButtonGroup>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default Step1;","import React from 'react';\r\nimport { Container, Form, Col, Button, ButtonGroup, Row } from 'react-bootstrap';\r\n\r\nconst Student = (props) => {\r\n    const {studentList, setStudents} = props;\r\n    const handleChange = (value, fieldName) => {\r\n        // let tempStudents = studentList; // [{},{},...]\r\n        // tempStudents = {...tempStudents, ...{[fieldName]: value}};\r\n        setStudents({...studentList, ...{[fieldName]: value}});\r\n    }\r\n\r\n  return (\r\n    <Container style={{\r\n        borderColor:'#DDDDDD', \r\n        borderWidth: '0.5px', \r\n        borderStyle:'solid', \r\n        borderRadius: '7px', \r\n        padding: '20px',\r\n        backgroundColor:'#F3F3F3',\r\n        marginTop:'10px'}}>\r\n    {/* <Form noValidate validated={validated}> */}\r\n        <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridName\">\r\n                <Form.Label>한글 성명 | Korean Name *</Form.Label>\r\n                <Form.Control required placeholder=\"Last First Name\" \r\n                    value={\r\n                        studentList.krName //!= '' ? studentList.krName : ''\r\n                    }\r\n                    onChange={e => {\r\n                        e.preventDefault();\r\n                        handleChange(e.target.value, 'krName');\r\n                    }} />\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGridName\">\r\n                <Form.Label>영문 성명 | English Name *</Form.Label>\r\n                <Form.Control required placeholder=\"First Last Name\" \r\n                    value={\r\n                        studentList.engName != '' ? studentList.engName : ''\r\n                    }\r\n                    onChange={e => {\r\n                       // e.preventDefault();\r\n                        handleChange(e.target.value, 'engName');\r\n                    }}/>\r\n            </Form.Group>\r\n        </Form.Row> \r\n        <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridBirth\">\r\n                <Form.Label>Birthdate *</Form.Label>\r\n                <Form.Control required type=\"date\" \r\n                    value={\r\n                        studentList.birthdate != '' ? studentList.birthdate : ''\r\n                    }\r\n                    onChange={e => {\r\n                        handleChange(e.target.value, 'birthdate');\r\n                    }}/>\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGridGrade\">\r\n                <Form.Label>학년 | Grade *</Form.Label>\r\n                <Form.Control required as=\"select\"\r\n                    value={\r\n                        studentList.grade != '' ? studentList.grade : undefined\r\n                    }\r\n                    onChange={e => {\r\n                        handleChange(e.target.value, 'grade');\r\n                    }}>\r\n                    <option>Choose...</option>\r\n                    <option>K</option>\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                    <option>5</option>\r\n                    <option>6</option>\r\n                    <option>7</option>\r\n                    <option>8</option>\r\n                    <option>9</option>\r\n                    <option>10</option>\r\n                    <option>11</option>\r\n                    <option>12</option>\r\n                    <option>N/A</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n        </Form.Row>\r\n        <Form.Group>\r\n            <Form.Label>성별 | Gender *</Form.Label>\r\n            <Form.Check style={{paddingLeft:\"20px\"}}\r\n                required\r\n                inline\r\n                type=\"radio\"\r\n                label=\"F\"\r\n                name=\"formgender\"\r\n                checked={\r\n                    studentList.gender == 'F' ? \"checked\" : undefined\r\n                }\r\n                onChange={e => {\r\n                    handleChange('F', 'gender');\r\n                }}/>\r\n            <Form.Check\r\n                inline\r\n                type=\"radio\"\r\n                label=\"M\"\r\n                name=\"formgender\"\r\n                checked={\r\n                    studentList.gender == 'M' ? \"checked\" : undefined\r\n                }\r\n                onChange={e => {\r\n                    handleChange('M', 'gender');\r\n                }}/>\r\n        </Form.Group>\r\n        <Form.Group>\r\n            <Form.Label>한국어 능력 | Korean Fluency Level</Form.Label>\r\n                <Form.Check style={{paddingLeft:\"20px\"}}\r\n                    inline\r\n                    type=\"radio\"\r\n                    label=\"전혀 못함 (Not at all)\"\r\n                    name=\"formRadioSkill\"\r\n                    checked={\r\n                        studentList.fluency == \"전혀 못함 (Not at all)\" ? \"checked\" : undefined\r\n                    }\r\n                    onChange={e => {\r\n                        handleChange(\"전혀 못함 (Not at all)\", 'fluency');\r\n                    }}\r\n                />\r\n                <Form.Check\r\n                    inline\r\n                    type=\"radio\"\r\n                    label=\"조금 (A little)\"\r\n                    name=\"formRadioSkill\" \r\n                    checked={\r\n                        studentList.fluency == \"조금 (A little)\" ? \"checked\" : undefined\r\n                    }\r\n                    onChange={e => {\r\n                        handleChange( \"조금 (A little)\", 'fluency');\r\n                    }}\r\n                />\r\n                <Form.Check\r\n                    inline\r\n                    type=\"radio\"\r\n                    label=\"잘함 (Well)\"\r\n                    name=\"formRadioSkill\"\r\n                    checked={\r\n                        studentList.fluency == \"잘함 (Well)\" ? \"checked\" : undefined\r\n                    }\r\n                    onChange={e => {\r\n                        let fluency = {current:{value: \"잘함 (Well)\"}}\r\n                        handleChange(\"잘함 (Well)\", 'fluency');\r\n                    }}\r\n                />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formGridReligion\">\r\n            <Form.Label>종교 | Religion</Form.Label>\r\n            <Form.Control \r\n                value={\r\n                    studentList.religion != '' ? studentList.religion : ''\r\n                }\r\n                onChange={e => {\r\n                    handleChange(e.target.value, 'religion');\r\n                }} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formGridDietary\">\r\n            <Form.Label>음식물 규정식 사항 | Dietary Notes</Form.Label>\r\n            <Form.Control placeholder=\"Peanut allergy, etc\" \r\n                value={\r\n                    studentList.dietaryNotes != '' ? studentList.dietaryNotes : ''\r\n                }\r\n                onChange={e => {\r\n                    handleChange(e.target.value, 'dietaryNotes');\r\n                }}/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formGridNote\">\r\n            <Form.Label>비고 | Other comments</Form.Label>\r\n            <Form.Control \r\n                value={\r\n                    studentList.comments != '' ? studentList.comments : ''\r\n                }\r\n                onChange={e => {\r\n                    handleChange(e.target.value, 'comments');\r\n                }}/>\r\n        </Form.Group>\r\n\r\n        <Form.Group id=\"formGridClass\">\r\n        <Form.Label><b>희망하는 수업일 | Day of Class *</b></Form.Label>\r\n            <Form.Check style={{paddingLeft:\"20px\"}}\r\n                required\r\n                inline\r\n                type=\"radio\"\r\n                label=\"금 | Friday\"\r\n                name=\"formRadioClass\"\r\n                checked={\r\n                    studentList.classDay == \"금\" ? \"checked\" : undefined\r\n                }\r\n                onChange={e => {\r\n                    handleChange(\"금\", 'classDay');\r\n                }}\r\n            />\r\n            <Form.Check\r\n                inline\r\n                type=\"radio\"\r\n                label=\"토 | Saturday\"\r\n                name=\"formRadioClass\"\r\n                checked={\r\n                    studentList.classDay == \"토\" ? \"checked\" : undefined\r\n                }\r\n                onChange={e => {\r\n                    handleChange(\"토\", 'classDay');\r\n                }}\r\n            />\r\n        </Form.Group>\r\n    {/* </Form> */}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Student","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport Student from '../components/Student';\r\n\r\nfunction useStudents() {\r\n    const [students, setStudents] = useState({\r\n        krName: '',\r\n        engName: '',\r\n        birthdate: '',\r\n        grade: '',\r\n        gender: '',\r\n        fluency: '',\r\n        religion: '',\r\n        dietaryNotes: '',\r\n        comments: '',\r\n        classDay: '',\r\n    });\r\n\r\n    // function addStudent() {\r\n    //     setStudents(students+1);\r\n    // }\r\n\r\n    // function removeStudent() {\r\n    //     setStudents(students-1);\r\n    // // }\r\n    // function getStudents(registrations) {\r\n    //     let s = [];\r\n    //     console.log(students);\r\n    //     for(let i=0;i<students;i++) {\r\n    //         console.log(\"showing student \" + i);\r\n    //         s.push(<Student key={i} registrations={registrations} studentCount={i}></Student>);\r\n    //     }\r\n    //     return s;\r\n    // }\r\n    return {students, setStudents};\r\n}\r\n\r\nexport default useStudents;","import React from 'react';\r\nimport { Form, Container, Button, ButtonGroup, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport useStudents from '../hooks/useStudents';\r\nimport useValidation from '../hooks/useValidation';\r\nimport Student from './Student';\r\n\r\nconst Step2 = ({steps, studentList}) => {\r\n    const {step, addCurrentStep, backCurrentStep} = steps;\r\n    const {students, setStudents} = studentList;\r\n    const [validated, setValidated] = useValidation();\r\n\r\n    // const handleAdd = () => {\r\n    //     let curStudents = students.concat([{}]);\r\n    //     setStudents(curStudents);\r\n    //     console.log(students);\r\n    // }\r\n\r\n    // const handleRemove = () => {\r\n    //     let tempStudents = students;\r\n    //     tempStudents.pop();\r\n    //     setStudents(tempStudents);\r\n    // }\r\n    \r\n    const handleSubmit = event => {\r\n        const form = event.currentTarget;\r\n        if (!form.checkValidity()) {\r\n            setValidated(true);\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        } else {\r\n            setValidated(false);\r\n            addCurrentStep();\r\n        }\r\n      };\r\n    // const getStudents = () => {\r\n    //     for(let i = 0; i < students.length; i++) {\r\n    //         console.log()\r\n    //         return <Student key={i} studentList={students} setStudents={setStudents} studentCount={i}></Student>\r\n    //     }\r\n    // }\r\n  return (\r\n    <div>\r\n        <h3>Student Information</h3>\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Student studentList={students} setStudents={setStudents}></Student>\r\n        <div>\r\n        <br></br>\r\n        {/* <OverlayTrigger\r\n            key=\"right\"\r\n            placement=\"right\"\r\n            overlay={\r\n                <Tooltip id={'tooltip-right'}>\r\n                등록 추가 | Add another student \r\n                </Tooltip>\r\n                }\r\n        >\r\n        <Button  \r\n            onClick={e => {\r\n                e.preventDefault();\r\n                handleAdd();\r\n            }}\r\n            variant=\"outline-success\">\r\n            + Add\r\n        </Button>\r\n        </OverlayTrigger>\r\n        {\r\n            students > 1 && \r\n            <Button \r\n                style={{marginLeft:\"5px\"}} \r\n                onClick={e => {\r\n                    e.preventDefault();\r\n                    handleRemove();\r\n                }}\r\n                variant=\"outline-danger\">\r\n                - Remove\r\n            </Button>\r\n        } */}\r\n        </div>\r\n        <br></br>\r\n        <ButtonGroup>\r\n            <Button \r\n                variant=\"info\" \r\n                onClick={e => {\r\n                    e.preventDefault();\r\n                    backCurrentStep();\r\n                }}>\r\n                &lt; Previous\r\n            </Button>\r\n            <Button\r\n                style={{marginLeft:'5px'}}\r\n                variant=\"info\"\r\n                type=\"submit\" \r\n                >\r\n                Next >\r\n            </Button>\r\n        </ButtonGroup>\r\n        </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Step2;","import SteinStore from 'stein-js-client';\r\n\r\nconst store = new SteinStore(\r\n    \"https://api.steinhq.com/v1/storages/5d3fb20987c49c04cac13693\"\r\n);\r\nconst username = \"admin\"; //this is so bad\r\nconst password = \"Office925\"; //this is also super bad\r\n\r\nfunction writeToDatabase(parentInfo, student) {\r\n    let registration = {...parentInfo, ...student};\r\n    writeRegistration(registration);\r\n}\r\n\r\nfunction writeRegistration(registration) {\r\n    store.append(\"Database\", [registration], \r\n    {\r\n        authentication: { username: username, password: password }\r\n    })\r\n    .then(res => {\r\n        console.log(res);\r\n        {window.location.href='/confirmation'};\r\n    }).catch(err => {\r\n        console.log(err);\r\n        {window.location.href='/confirmation'};\r\n    });\r\n}\r\n\r\nasync function searchDatabase(email) {\r\n    console.log(\"em: \" + email);\r\n    return await store.read(\"Semester1\",     {\r\n        authentication: { username: username, password: password },\r\n        search: { email: email }\r\n    })\r\n    .then(data => {\r\n        // console.log(\"Found \" + data.length + \" student(s): \");\r\n        // data.forEach(element => {\r\n        //     console.log(element.engName);\r\n        // });\r\n        // console.log(\" Would you like to re-register them?\");\r\n        return data;\r\n      }).catch(err => {\r\n        console.log(err);\r\n    });\r\n}\r\n\r\nexport default {writeToDatabase, searchDatabase, writeRegistration};","import React from 'react';\r\nimport { Form, Button, ButtonGroup, Container } from 'react-bootstrap';\r\nimport Stein from './Stein';\r\nimport useValidation from '../hooks/useValidation';\r\n\r\nconst Finish = ({steps, registrations, studentList}) => {\r\n  const {step, addCurrentStep, backCurrentStep} = steps;\r\n  const {registration, setRegistration} = registrations;    \r\n  const {students, setStudents} = studentList;\r\n\r\n  const [validated, setValidated] = useValidation();\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    if (!form.checkValidity()) {\r\n      setValidated(true);\r\n      event.stopPropagation();\r\n    } else {\r\n      setValidated(false);\r\n      await Stein.writeToDatabase(registration, students);\r\n    }\r\n  }; \r\n\r\n  return (\r\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Container>\r\n          <h3>Registration Summary</h3>\r\n          Registering for: {students.krName + \" (\" + students.engName + \")\"} <br/>\r\n          <h4>Terms and Conditions</h4>\r\n            한국 학교 교장 귀하 (To: Head of the School)<br/><br/>\r\n            저는 위의 학생을 귀교에 입학시키기를 원하며 학부모로서의 의무를 충실히 이행할 것을 서약합니다.\r\n            <br/>(I would like to register our child in your school and promise to support the academic & extracurricular activites of your school.) \r\n            <br/>\r\n            또한 학생들 간식준비를 위해 기꺼이 도울것을 약속합니다. \r\n            <br/>(I also agree to volunteer to prepare and assist during the students' snack time.)\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n        <Form.Group id=\"formGridCheckbox\">\r\n            <Form.Check type=\"checkbox\" label=\"동의 합니다 (I agree with the Terms and Conditions)\" required/>\r\n        </Form.Group>\r\n        </Container>\r\n       \r\n\r\n          <Button \r\n              inline\r\n              variant=\"info\" \r\n              onClick={e => {\r\n                  e.preventDefault()\r\n                  backCurrentStep();\r\n              }}>\r\n              &lt; Previous\r\n          </Button>\r\n          <Button inline variant=\"success\" \r\n            style={{float:'right'}}\r\n            type=\"submit\"\r\n          //   onClick={async e =>{\r\n          //    e.preventDefault()\r\n          //  //  e.target.value = \"check\";\r\n          //    await handleSubmit(e);\r\n          //   }}\r\n            >\r\n            Submit\r\n          </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default Finish;","import { useState, useEffect } from \"react\";\r\n\r\nfunction useSteps() {\r\n    const [step, setSteps] = useState(1);\r\n\r\n    function addCurrentStep() {\r\n        setSteps(step+1);\r\n    }\r\n\r\n    function backCurrentStep() {\r\n        setSteps(step-1);\r\n    }\r\n\r\n    return {step, addCurrentStep, backCurrentStep};\r\n}\r\n\r\nexport default useSteps;","import { useState, useEffect } from \"react\";\r\n\r\nfunction useRegistration(currentStep) {\r\n    const [registration, setRegistration] = useState({});\r\n    // const [studentInfo, setStudentInfo] = useState([{}]);\r\n    // function addToRegistration(newInfo) {\r\n    //     setRegistration({...registration, ...newInfo});\r\n    // }\r\n\r\n    // function addStudentToRegistration(newStudentInfo) { // [{},{}]\r\n    //     setStudentInfo(newStudentInfo);\r\n    //     // let students = [];\r\n    //     // if(registration.students !== undefined) {\r\n    //     //     students = registration.students.concat(newStudentInfo);\r\n    //     // }\r\n    //    //setRegistration({...registration, ...{students: newStudentInfo}});\r\n    // }\r\n\r\n    return {\r\n        registration, \r\n        setRegistration\r\n        // addToRegistration,\r\n        // studentInfo,\r\n        // addStudentToRegistration\r\n    };\r\n}\r\n\r\nexport default useRegistration;","export default {\r\n    year: '2019-2020 2학기 | 2nd Semester',\r\n}","import React from 'react';\r\nimport Step1 from '../components/Step1';\r\nimport Step2 from '../components/Step2';\r\nimport Finish from '../components/Finish';\r\nimport useSteps from '../hooks/useSteps';\r\nimport useRegistration from '../hooks/useRegistration';\r\n\r\nimport { Container } from 'react-bootstrap';\r\nimport Constants from '../constants';\r\nimport useStudents from '../hooks/useStudents';\r\n\r\nconst Register = () => {\r\n  const {step, addCurrentStep, backCurrentStep} = useSteps();\r\n  const {registration, setRegistration} = useRegistration();\r\n  const {students, setStudents} = useStudents();\r\n\r\n  return (\r\n    <Container style={{marginTop:'50px'}}>\r\n      <h1>Registration</h1>\r\n      <h4>{Constants.year}</h4>\r\n      <br></br>\r\n      <Container style={{backgroundColor: '#eee', borderRadius: '7px', padding: '20px'}}>\r\n        {\r\n          step === undefined && <p>Loading...</p>\r\n        }\r\n        {\r\n          step === 1 && <Step1 \r\n            steps={{step, addCurrentStep, backCurrentStep}}\r\n            registrations={{registration, setRegistration}}>\r\n          </Step1>\r\n        }\r\n        {\r\n          step === 2 && <Step2  \r\n            steps={{step, addCurrentStep, backCurrentStep}}\r\n            studentList={{students, setStudents}}>\r\n          </Step2>\r\n        }\r\n        {\r\n          step === 3 && <Finish \r\n            steps={{step, addCurrentStep, backCurrentStep}}\r\n            registrations={{registration, setRegistration}}\r\n            studentList={{students, setStudents}}>\r\n          </Finish>\r\n        }\r\n      </Container>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Register;","import { useState, useEffect } from \"react\";\r\n\r\nfunction useSearch() {\r\n    const [email, setEmail] = useState('');\r\n    const [results, setResults] = useState(undefined);\r\n\r\n    return {\r\n        email, setEmail, results, setResults\r\n    };\r\n}\r\n\r\nexport default useSearch;","import React from 'react';\r\nimport Constants from '../constants';\r\nimport useSearch from '../hooks/useSearch';\r\nimport Stein from '../components/Stein';\r\nimport { Form, Container, Button, Col } from 'react-bootstrap';\r\n\r\nconst Home = () => {\r\n    const {email, setEmail, results, setResults} = useSearch();\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        console.log(email);\r\n        const results = await Stein.searchDatabase(email);\r\n        console.log(results);\r\n        setResults(results);\r\n    };\r\n  const handleRegister = async event => {\r\n    event.preventDefault();\r\n    results.forEach(async element => {\r\n      console.log(element);\r\n      await Stein.writeRegistration(element);\r\n    });\r\n  };\r\n  return (\r\n    <Container style={{marginTop:'50px'}}>\r\n    <Form onSubmit={handleSubmit}>\r\n        <Container>\r\n          <h2>재등록 | Reregister </h2>\r\n          <h4>{Constants.year}</h4>\r\n          <p>1-2학기 재학생만 가능, 신입생은 새로 등록해주세요. <br/>\r\n          Only for returning students, for new students please use the other <a href=\"/register\">form</a>.\r\n          </p>\r\n          <Form.Label><strong>부모 이메일 주소 | Parent Email</strong></Form.Label>\r\n          <Form.Row>\r\n            <Col>\r\n                <Form.Control required placeholder=\"abc@gmail.com\" type=\"email\"\r\n                    value={\r\n                        email ? email : ''\r\n                    }\r\n                    onChange={e => {\r\n                        setEmail(e.target.value);\r\n                    }}/>\r\n            </Col>\r\n            <Col>\r\n            <Button variant=\"info\" type=\"submit\">\r\n                Search\r\n            </Button>\r\n            </Col>\r\n          </Form.Row>\r\n        </Container>\r\n    </Form>\r\n    <Form onSubmit={handleRegister}>\r\n    <Container style={{marginTop:'10px'}}>\r\n      {results ? \r\n      <div>Found {results.length} student(s): <br/>\r\n        {results.map(element => \r\n        <b>{element.engName}<br/></b>)}\r\n        {results.length == 0 ? <p>Please register <a href=\"/register\">here</a>.</p>: <Button variant=\"success\" type=\"submit\" style={{marginTop:'10px'}}>\r\n          Reregister all\r\n        </Button> }\r\n      </div>\r\n      : ''\r\n      }\r\n    </Container>\r\n    </Form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nconst Confirmation = () => {\r\n  return (\r\n    <Container style={{marginTop:'50px'}}>\r\n        <h1>Confirmed</h1>\r\n        <p> 2 학기는 <strong>1/7/2020(금) 1/8/2020(토)</strong> 시작합니다.\r\n        <br/> 2nd Semester starts 1/7/2020(Friday) 1/8/2020(Saturday).</p>\r\n\r\n        <p>등록 해주셔서 감사합니다. 아래 주소로 우편을 이용하시거나 교무실로 직접가져오셔도 됩니다.\r\n        </p>\r\n\r\n        <p>Thank you for your registration.\r\n          You may bring your check to the first day of class at the school office or send your check through the mail. <br/>\r\n        <br/>Pay to the order of: \r\n        <br/>St. Andrew Kim Korean School \r\n        <br/>Address: 11700 1st Ave. NE, \r\n        <br/>Seattle WA 98125\r\n        <br/><strong>We do not accept cash.</strong></p>\r\n\r\n          <br></br>\r\n          Please email us at sakks10@gmail.com or call us at 206.362.2278 for any questions.\r\n          <br></br>\r\n         <p> We look forward to seeing you!</p>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Confirmation;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Constants from '../constants';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n        <div className=\"jumbotron jumbotron-fluid bg-dark text-center\">\r\n        <div className=\"jumbotron-background\">\r\n            <img src=\"../students.jpg\" className=\"blur img-fluid \"/>\r\n        </div>\r\n        <div className=\"container text-white\">\r\n            <h1>St. Andrew Kim Korean School</h1>\r\n            <h2>성 김대건 한국 학교</h2><br></br>\r\n            <p>{Constants.year}</p>\r\n            <p>Now accepting registrations!</p> \r\n            <p>\r\n            <Button variant=\"success\" href=\"/register\">등록 | Register</Button>\r\n            </p>\r\n            <p> OR </p>\r\n            <Button variant=\"primary\" href=\"/reregister\">재등록 | Reregister</Button>\r\n        </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Router } from \"@reach/router\";\r\n\r\nimport './App.css';\r\nimport { Nav, Navbar, Container } from 'react-bootstrap';\r\nimport Register from './pages/Register';\r\nimport Reregister from './pages/Reregister';\r\nimport Confirmation from './pages/Confirmation';\r\nimport Home from './pages/Home';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"/\">St. Andrew Kim Korean School</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/\">Home</Nav.Link>\r\n            <Nav.Link href=\"/register\">Register</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <Router>\r\n        <Home path=\"/\"/>\r\n        <Register path=\"/register\" />\r\n        <Confirmation path=\"confirmation\"/>\r\n        <Reregister path=\"/reregister\"/>\r\n      </Router>\r\n      <Container style={{marginTop: '50px'}}>\r\n        <hr/>\r\n        <footer style={{color: 'gray'}}>\r\n          <p style={{fontSize:'13px'}}>© 2019 - St. Andrew Kim Korean School </p>\r\n        </footer>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}