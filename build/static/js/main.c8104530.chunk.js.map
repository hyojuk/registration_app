{"version":3,"sources":["hooks/useValidation.js","components/Step1.js","components/Student.js","hooks/useStudents.js","components/Step2.js","components/Stein.js","components/Finish.js","hooks/useSteps.js","hooks/useRegistration.js","constants.js","pages/Register.js","hooks/useSearch.js","pages/Reregister.js","pages/Confirmation.js","pages/Home.js","firebase.js","hooks/useAuth.js","components/Write.js","pages/About.js","pages/ClassPage.js","pages/Class.js","pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["useValidation","useState","Step1","steps","registrations","addCurrentStep","step","registration","backCurrentStep","setRegistration","validated","setValidated","addToRegistration","obj","parentInfo","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","Group","controlId","Label","Control","required","placeholder","type","value","parentName","onChange","e","target","email","Row","as","Col","phone","otherPhone","address","address2","city","state","undefined","zip","ButtonGroup","Button","variant","Student","props","studentList","setStudents","handleChange","fieldName","Container","style","borderColor","borderWidth","borderStyle","borderRadius","padding","backgroundColor","marginTop","krName","engName","birthdate","grade","Check","paddingLeft","inline","label","name","checked","gender","fluency","religion","dietaryNotes","comments","id","classDay","useStudents","students","Step2","onClick","marginLeft","store","SteinStore","writeRegistration","append","authentication","username","password","then","res","window","location","href","catch","err","a","read","search","data","console","log","writeToDatabase","student","searchDatabase","Finish","handleSubmit","Stein","float","useSteps","setSteps","useRegistration","currentStep","year","classes","Register","Constants","useSearch","setEmail","results","setResults","Home","handleRegister","forEach","element","length","map","Confirmation","Alert","className","src","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","auth","useAuth","user","setUser","loading","setLoading","useEffect","onAuthStateChanged","uid","displayName","photoURL","Write","pageName","firebaseRef","toggle","setToggle","EditorState","createEmpty","editorContent","setEditorContent","HTMLContent","setHTMLContent","isSaving","setIsSaving","errorSaving","setErrorSaving","on","snap","content","val","editorState","convertFromHTML","contentBlocks","entityMap","contentState","ContentState","createFromBlockArray","createWithContent","off","sendEditorContentToFirebase","convertedToHtml","draftToHtml","convertToRaw","getCurrentContent","valueToSet","set","message","disabled","onEditorStateChange","toolbar","options","dangerouslySetInnerHTML","__html","About","ref","ClassPage","Class","Tab","defaultActiveKey","sm","Nav","Item","Link","eventKey","Content","Pane","Login","authError","setAuthError","handleLogin","provider","GoogleAuthProvider","signInWithPopup","navigate","handleSignOut","signOut","App","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","path","Reregister","color","fontSize","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.c8104530.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction useValidation() {\n    const [validation, setValidation] = useState(false);\n\n    return [validation, setValidation];\n}\n\nexport default useValidation;","import React from 'react';\nimport useValidation from '../hooks/useValidation';\nimport { Form, Col, Button, ButtonGroup } from 'react-bootstrap';\n\nconst Step1 = ({steps, registrations}) => {\n    const {step, addCurrentStep, backCurrentStep} = steps;\n    const {registration, setRegistration} = registrations;\n\n    const [validated, setValidated] = useValidation();\n    const handleSubmit = event => {\n        const form = event.currentTarget;\n        if (!form.checkValidity()) {\n            setValidated(true);\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            setValidated(false);\n            addCurrentStep();\n        }\n      };\n    const addToRegistration = (obj) => {\n        let parentInfo = {...registration, ...obj};\n        setRegistration(parentInfo);\n    }\n\n  return (\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n        <h3>Parent Information</h3>\n        <Form.Group controlId=\"formGridName\">\n            <Form.Label>성명 | Full Name *</Form.Label>\n            <Form.Control required placeholder=\"Name\" type=\"text\"\n                \n                value={\n                    registration.parentName ? registration.parentName : ''\n                }\n                onChange={e => {\n                    addToRegistration({parentName: e.target.value});\n                }}/>\n        </Form.Group>\n        <Form.Group controlId=\"formGridEmail\">\n            <Form.Label>Email *</Form.Label>\n            <Form.Control required type=\"email\" placeholder=\"Enter email\" \n                value={\n                    registration.email ? registration.email : ''\n                }\n                onChange={e => {\n                    addToRegistration({email: e.target.value});\n                }}/>\n        </Form.Group>\n        <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridPhone\">\n            <Form.Label>전화 번호 | Phone Number *</Form.Label>\n            <Form.Control required type=\"phone\" placeholder=\"Primary Phone #\" \n                value={\n                    registration.phone ? registration.phone : ''\n                }\n                onChange={e => {\n                    addToRegistration({phone: e.target.value});\n                }}/>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridPhone\">\n            <Form.Label>비상 연락 번호 | Emergency Phone Number</Form.Label>\n            <Form.Control type=\"phone\" placeholder=\"Emergency Phone #\" \n                value={\n                    registration.otherPhone ? registration.otherPhone : ''\n                }\n                onChange={e => {\n                    addToRegistration({otherPhone: e.target.value});\n                }}/>\n            </Form.Group>\n        </Form.Row>\n\n        <Form.Group controlId=\"formGridAddress1\">\n            <Form.Label>Address *</Form.Label>\n            <Form.Control required placeholder=\"1234 Main St\" \n                value={\n                    registration.address ? registration.address : ''\n                }\n                onChange={e => {\n                    addToRegistration({address: e.target.value});\n                }}/>\n        </Form.Group>\n\n        <Form.Group controlId=\"formGridAddress2\">\n            <Form.Label>Address 2</Form.Label>\n            <Form.Control placeholder=\"Apartment, studio, or floor\" \n                value={\n                    registration.address2 ? registration.address2 : ''\n                }\n                onChange={e => {\n                    addToRegistration({address2: e.target.value});\n                }}/>\n        </Form.Group>\n\n        <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridCity\">\n            <Form.Label>City *</Form.Label>\n            <Form.Control required placeholder=\"Seattle\"\n                value={\n                    registration.city ? registration.city : ''\n                }\n                onChange={e => {\n                    addToRegistration({city: e.target.value});\n                }}/>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridState\">\n            <Form.Label>State</Form.Label>\n            <Form.Control as=\"select\" required\n                value={\n                    registration.state ? registration.state : undefined\n                }\n                onChange={e => {\n                    addToRegistration({state: e.target.value});\n                }}>\n                <option>Choose...</option>\n                <option>WA</option>\n                <option>Other</option>\n            </Form.Control>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridZip\">\n            <Form.Label>Zip *</Form.Label>\n            <Form.Control required \n                value={\n                    registration.zip ? registration.zip : ''\n                }\n                onChange={e => {\n                    addToRegistration({zip: e.target.value});\n                }}/>\n            </Form.Group>\n        </Form.Row>\n\n        <ButtonGroup>\n            <Button\n                variant=\"info\" \n                type=\"submit\"\n                >\n                Next >\n            </Button>\n        </ButtonGroup>\n    </Form>\n  )\n}\n\nexport default Step1;","import React from 'react';\nimport { Container, Form, Col, Button, ButtonGroup, Row } from 'react-bootstrap';\n\nconst Student = (props) => {\n    const {studentList, setStudents} = props;\n    const handleChange = (value, fieldName) => {\n        // let tempStudents = studentList; // [{},{},...]\n        // tempStudents = {...tempStudents, ...{[fieldName]: value}};\n        setStudents({...studentList, ...{[fieldName]: value}});\n    }\n\n  return (\n    <Container style={{\n        borderColor:'#DDDDDD', \n        borderWidth: '0.5px', \n        borderStyle:'solid', \n        borderRadius: '7px', \n        padding: '20px',\n        backgroundColor:'#F3F3F3',\n        marginTop:'10px'}}>\n    {/* <Form noValidate validated={validated}> */}\n        <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridName\">\n                <Form.Label>한글 성명 | Korean Name *</Form.Label>\n                <Form.Control required placeholder=\"Last First Name\" \n                    value={\n                        studentList.krName //!= '' ? studentList.krName : ''\n                    }\n                    onChange={e => {\n                        e.preventDefault();\n                        handleChange(e.target.value, 'krName');\n                    }} />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"formGridName\">\n                <Form.Label>영문 성명 | English Name *</Form.Label>\n                <Form.Control required placeholder=\"First Last Name\" \n                    value={\n                        studentList.engName != '' ? studentList.engName : ''\n                    }\n                    onChange={e => {\n                       // e.preventDefault();\n                        handleChange(e.target.value, 'engName');\n                    }}/>\n            </Form.Group>\n        </Form.Row> \n        <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridBirth\">\n                <Form.Label>Birthdate *</Form.Label>\n                <Form.Control required type=\"date\" \n                    value={\n                        studentList.birthdate != '' ? studentList.birthdate : ''\n                    }\n                    onChange={e => {\n                        handleChange(e.target.value, 'birthdate');\n                    }}/>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"formGridGrade\">\n                <Form.Label>학년 | Grade *</Form.Label>\n                <Form.Control required as=\"select\"\n                    value={\n                        studentList.grade != '' ? studentList.grade : undefined\n                    }\n                    onChange={e => {\n                        handleChange(e.target.value, 'grade');\n                    }}>\n                    <option>Choose...</option>\n                    <option>K</option>\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                    <option>6</option>\n                    <option>7</option>\n                    <option>8</option>\n                    <option>9</option>\n                    <option>10</option>\n                    <option>11</option>\n                    <option>12</option>\n                    <option>N/A</option>\n                </Form.Control>\n            </Form.Group>\n        </Form.Row>\n        <Form.Group>\n            <Form.Label>성별 | Gender *</Form.Label>\n            <Form.Check style={{paddingLeft:\"20px\"}}\n                required\n                inline\n                type=\"radio\"\n                label=\"F\"\n                name=\"formgender\"\n                checked={\n                    studentList.gender == 'F' ? \"checked\" : undefined\n                }\n                onChange={e => {\n                    handleChange('F', 'gender');\n                }}/>\n            <Form.Check\n                inline\n                type=\"radio\"\n                label=\"M\"\n                name=\"formgender\"\n                checked={\n                    studentList.gender == 'M' ? \"checked\" : undefined\n                }\n                onChange={e => {\n                    handleChange('M', 'gender');\n                }}/>\n        </Form.Group>\n        <Form.Group>\n            <Form.Label>한국어 능력 | Korean Fluency Level</Form.Label>\n                <Form.Check style={{paddingLeft:\"20px\"}}\n                    inline\n                    type=\"radio\"\n                    label=\"전혀 못함 (Not at all)\"\n                    name=\"formRadioSkill\"\n                    checked={\n                        studentList.fluency == \"전혀 못함 (Not at all)\" ? \"checked\" : undefined\n                    }\n                    onChange={e => {\n                        handleChange(\"전혀 못함 (Not at all)\", 'fluency');\n                    }}\n                />\n                <Form.Check\n                    inline\n                    type=\"radio\"\n                    label=\"조금 (A little)\"\n                    name=\"formRadioSkill\" \n                    checked={\n                        studentList.fluency == \"조금 (A little)\" ? \"checked\" : undefined\n                    }\n                    onChange={e => {\n                        handleChange( \"조금 (A little)\", 'fluency');\n                    }}\n                />\n                <Form.Check\n                    inline\n                    type=\"radio\"\n                    label=\"잘함 (Well)\"\n                    name=\"formRadioSkill\"\n                    checked={\n                        studentList.fluency == \"잘함 (Well)\" ? \"checked\" : undefined\n                    }\n                    onChange={e => {\n                        let fluency = {current:{value: \"잘함 (Well)\"}}\n                        handleChange(\"잘함 (Well)\", 'fluency');\n                    }}\n                />\n        </Form.Group>\n        <Form.Group controlId=\"formGridReligion\">\n            <Form.Label>종교 | Religion</Form.Label>\n            <Form.Control \n                value={\n                    studentList.religion != '' ? studentList.religion : ''\n                }\n                onChange={e => {\n                    handleChange(e.target.value, 'religion');\n                }} />\n        </Form.Group>\n        <Form.Group controlId=\"formGridDietary\">\n            <Form.Label>음식물 규정식 사항 | Dietary Notes</Form.Label>\n            <Form.Control placeholder=\"Peanut allergy, etc\" \n                value={\n                    studentList.dietaryNotes != '' ? studentList.dietaryNotes : ''\n                }\n                onChange={e => {\n                    handleChange(e.target.value, 'dietaryNotes');\n                }}/>\n        </Form.Group>\n\n        <Form.Group controlId=\"formGridNote\">\n            <Form.Label>비고 | Other comments</Form.Label>\n            <Form.Control \n                value={\n                    studentList.comments != '' ? studentList.comments : ''\n                }\n                onChange={e => {\n                    handleChange(e.target.value, 'comments');\n                }}/>\n        </Form.Group>\n\n        <Form.Group id=\"formGridClass\">\n        <Form.Label><b>희망하는 수업일 | Day of Class *</b></Form.Label>\n            <Form.Check style={{paddingLeft:\"20px\"}}\n                required\n                inline\n                type=\"radio\"\n                label=\"금 | Friday\"\n                name=\"formRadioClass\"\n                checked={\n                    studentList.classDay == \"금\" ? \"checked\" : undefined\n                }\n                onChange={e => {\n                    handleChange(\"금\", 'classDay');\n                }}\n            />\n            <Form.Check\n                inline\n                type=\"radio\"\n                label=\"토 | Saturday\"\n                name=\"formRadioClass\"\n                checked={\n                    studentList.classDay == \"토\" ? \"checked\" : undefined\n                }\n                onChange={e => {\n                    handleChange(\"토\", 'classDay');\n                }}\n            />\n        </Form.Group>\n    {/* </Form> */}\n    </Container>\n  )\n}\n\nexport default Student","import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nimport Student from '../components/Student';\n\nfunction useStudents() {\n    const [students, setStudents] = useState({\n        krName: '',\n        engName: '',\n        birthdate: '',\n        grade: '',\n        gender: '',\n        fluency: '',\n        religion: '',\n        dietaryNotes: '',\n        comments: '',\n        classDay: '',\n    });\n\n    // function addStudent() {\n    //     setStudents(students+1);\n    // }\n\n    // function removeStudent() {\n    //     setStudents(students-1);\n    // // }\n    // function getStudents(registrations) {\n    //     let s = [];\n    //     console.log(students);\n    //     for(let i=0;i<students;i++) {\n    //         console.log(\"showing student \" + i);\n    //         s.push(<Student key={i} registrations={registrations} studentCount={i}></Student>);\n    //     }\n    //     return s;\n    // }\n    return {students, setStudents};\n}\n\nexport default useStudents;","import React from 'react';\nimport { Form, Container, Button, ButtonGroup, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport useStudents from '../hooks/useStudents';\nimport useValidation from '../hooks/useValidation';\nimport Student from './Student';\n\nconst Step2 = ({steps, studentList}) => {\n    const {step, addCurrentStep, backCurrentStep} = steps;\n    const {students, setStudents} = studentList;\n    const [validated, setValidated] = useValidation();\n\n    // const handleAdd = () => {\n    //     let curStudents = students.concat([{}]);\n    //     setStudents(curStudents);\n    //     console.log(students);\n    // }\n\n    // const handleRemove = () => {\n    //     let tempStudents = students;\n    //     tempStudents.pop();\n    //     setStudents(tempStudents);\n    // }\n    \n    const handleSubmit = event => {\n        const form = event.currentTarget;\n        if (!form.checkValidity()) {\n            setValidated(true);\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            setValidated(false);\n            addCurrentStep();\n        }\n      };\n    // const getStudents = () => {\n    //     for(let i = 0; i < students.length; i++) {\n    //         console.log()\n    //         return <Student key={i} studentList={students} setStudents={setStudents} studentCount={i}></Student>\n    //     }\n    // }\n  return (\n    <div>\n        <h3>Student Information</h3>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n        <Student studentList={students} setStudents={setStudents}></Student>\n        <div>\n        <br></br>\n        {/* <OverlayTrigger\n            key=\"right\"\n            placement=\"right\"\n            overlay={\n                <Tooltip id={'tooltip-right'}>\n                등록 추가 | Add another student \n                </Tooltip>\n                }\n        >\n        <Button  \n            onClick={e => {\n                e.preventDefault();\n                handleAdd();\n            }}\n            variant=\"outline-success\">\n            + Add\n        </Button>\n        </OverlayTrigger>\n        {\n            students > 1 && \n            <Button \n                style={{marginLeft:\"5px\"}} \n                onClick={e => {\n                    e.preventDefault();\n                    handleRemove();\n                }}\n                variant=\"outline-danger\">\n                - Remove\n            </Button>\n        } */}\n        </div>\n        <br></br>\n        <ButtonGroup>\n            <Button \n                variant=\"info\" \n                onClick={e => {\n                    e.preventDefault();\n                    backCurrentStep();\n                }}>\n                &lt; Previous\n            </Button>\n            <Button\n                style={{marginLeft:'5px'}}\n                variant=\"info\"\n                type=\"submit\" \n                >\n                Next >\n            </Button>\n        </ButtonGroup>\n        </Form>\n    </div>\n  )\n}\n\nexport default Step2;","import SteinStore from 'stein-js-client';\n\nconst store = new SteinStore(\n    \"https://api.steinhq.com/v1/storages/5d3fb20987c49c04cac13693\"\n);\nconst username = \"admin\"; //this is so bad\nconst password = \"Office925\"; //this is also super bad\n\nfunction writeToDatabase(parentInfo, student) {\n    let registration = {...parentInfo, ...student};\n    writeRegistration(registration);\n}\n\nfunction writeRegistration(registration) {\n    store.append(\"Database\", [registration], \n    {\n        authentication: { username: username, password: password }\n    })\n    .then(res => {\n        // console.log(res);\n        {window.location.href='/confirmation'};\n    }).catch(err => {\n        // console.log(err);\n        {window.location.href='/confirmation'};\n    });\n}\n\nasync function searchDatabase(email) {\n    // console.log(\"em: \" + email);\n    return await store.read(\"Semester1\",     {\n        authentication: { username: username, password: password },\n        search: { email: email }\n    })\n    .then(data => {\n        // console.log(\"Found \" + data.length + \" student(s): \");\n        // data.forEach(element => {\n        //     console.log(element.engName);\n        // });\n        // console.log(\" Would you like to re-register them?\");\n        return data;\n      }).catch(err => {\n        console.log(err);\n    });\n}\n\nexport default {writeToDatabase, searchDatabase, writeRegistration};","import React from 'react';\nimport { Form, Button, ButtonGroup, Container } from 'react-bootstrap';\nimport Stein from './Stein';\nimport useValidation from '../hooks/useValidation';\n\nconst Finish = ({steps, registrations, studentList}) => {\n  const {step, addCurrentStep, backCurrentStep} = steps;\n  const {registration, setRegistration} = registrations;    \n  const {students, setStudents} = studentList;\n\n  const [validated, setValidated] = useValidation();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    if (!form.checkValidity()) {\n      setValidated(true);\n      event.stopPropagation();\n    } else {\n      setValidated(false);\n      await Stein.writeToDatabase(registration, students);\n    }\n  }; \n\n  return (\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n        <Container>\n          <h3>Registration Summary</h3>\n          Registering for: {students.krName + \" (\" + students.engName + \")\"} <br/>\n          <h4>Terms and Conditions</h4>\n            한국 학교 교장 귀하 (To: Head of the School)<br/><br/>\n            저는 위의 학생을 귀교에 입학시키기를 원하며 학부모로서의 의무를 충실히 이행할 것을 서약합니다.\n            <br/>(I would like to register our child in your school and promise to support the academic & extracurricular activites of your school.) \n            <br/>\n            또한 학생들 간식준비를 위해 기꺼이 도울것을 약속합니다. \n            <br/>(I also agree to volunteer to prepare and assist during the students' snack time.)\n            <br/>\n            <br/>\n            <br/>\n        <Form.Group id=\"formGridCheckbox\">\n            <Form.Check type=\"checkbox\" label=\"동의 합니다 (I agree with the Terms and Conditions)\" required/>\n        </Form.Group>\n        </Container>\n       \n\n          <Button \n              inline\n              variant=\"info\" \n              onClick={e => {\n                  e.preventDefault()\n                  backCurrentStep();\n              }}>\n              &lt; Previous\n          </Button>\n          <Button inline variant=\"success\" \n            style={{float:'right'}}\n            type=\"submit\"\n          //   onClick={async e =>{\n          //    e.preventDefault()\n          //  //  e.target.value = \"check\";\n          //    await handleSubmit(e);\n          //   }}\n            >\n            Submit\n          </Button>\n    </Form>\n  )\n}\n\nexport default Finish;","import { useState, useEffect } from \"react\";\n\nfunction useSteps() {\n    const [step, setSteps] = useState(1);\n\n    function addCurrentStep() {\n        setSteps(step+1);\n    }\n\n    function backCurrentStep() {\n        setSteps(step-1);\n    }\n\n    return {step, addCurrentStep, backCurrentStep};\n}\n\nexport default useSteps;","import { useState, useEffect } from \"react\";\n\nfunction useRegistration(currentStep) {\n    const [registration, setRegistration] = useState({});\n    // const [studentInfo, setStudentInfo] = useState([{}]);\n    // function addToRegistration(newInfo) {\n    //     setRegistration({...registration, ...newInfo});\n    // }\n\n    // function addStudentToRegistration(newStudentInfo) { // [{},{}]\n    //     setStudentInfo(newStudentInfo);\n    //     // let students = [];\n    //     // if(registration.students !== undefined) {\n    //     //     students = registration.students.concat(newStudentInfo);\n    //     // }\n    //    //setRegistration({...registration, ...{students: newStudentInfo}});\n    // }\n\n    return {\n        registration, \n        setRegistration\n        // addToRegistration,\n        // studentInfo,\n        // addStudentToRegistration\n    };\n}\n\nexport default useRegistration;","export default {\n    year: '2020-2021 1학기 | 1st Semester',\n    classes: ['유치가 (금|토)', '유치나', '기초1 (금)', '기초1 (토)', '기초2 (금|토)', '기초3', '초급 (금|토)', '중급', '고급'],\n}","import React from 'react';\nimport Step1 from '../components/Step1';\nimport Step2 from '../components/Step2';\nimport Finish from '../components/Finish';\nimport useSteps from '../hooks/useSteps';\nimport useRegistration from '../hooks/useRegistration';\n\nimport { Container } from 'react-bootstrap';\nimport Constants from '../constants';\nimport useStudents from '../hooks/useStudents';\n\nconst Register = () => {\n  const {step, addCurrentStep, backCurrentStep} = useSteps();\n  const {registration, setRegistration} = useRegistration();\n  const {students, setStudents} = useStudents();\n\n  return (\n    <Container style={{marginTop:'50px'}}>\n      <h1>Registration</h1>\n      <h4>{Constants.year}</h4>\n      <br></br>\n      <Container style={{backgroundColor: '#eee', borderRadius: '7px', padding: '20px'}}>\n        {\n          step === undefined && <p>Loading...</p>\n        }\n        {\n          step === 1 && <Step1 \n            steps={{step, addCurrentStep, backCurrentStep}}\n            registrations={{registration, setRegistration}}>\n          </Step1>\n        }\n        {\n          step === 2 && <Step2  \n            steps={{step, addCurrentStep, backCurrentStep}}\n            studentList={{students, setStudents}}>\n          </Step2>\n        }\n        {\n          step === 3 && <Finish \n            steps={{step, addCurrentStep, backCurrentStep}}\n            registrations={{registration, setRegistration}}\n            studentList={{students, setStudents}}>\n          </Finish>\n        }\n      </Container>\n    </Container>\n  )\n}\n\nexport default Register;","import { useState, useEffect } from \"react\";\n\nfunction useSearch() {\n    const [email, setEmail] = useState('');\n    const [results, setResults] = useState(undefined);\n\n    return {\n        email, setEmail, results, setResults\n    };\n}\n\nexport default useSearch;","import React from 'react';\nimport Constants from '../constants';\nimport useSearch from '../hooks/useSearch';\nimport Stein from '../components/Stein';\nimport { Form, Container, Button, Col } from 'react-bootstrap';\n\nconst Home = () => {\n    const {email, setEmail, results, setResults} = useSearch();\n    const handleSubmit = async event => {\n        event.preventDefault();\n        // console.log(email);\n        const results = await Stein.searchDatabase(email);\n        // console.log(results);\n        setResults(results);\n    };\n  const handleRegister = async event => {\n    event.preventDefault();\n    results.forEach(async element => {\n      // console.log(element);\n      await Stein.writeRegistration(element);\n    });\n  };\n  return (\n    <Container style={{marginTop:'50px'}}>\n    <Form onSubmit={handleSubmit}>\n        <Container>\n          <h2>재등록 | Reregister </h2>\n          <h4>{Constants.year}</h4>\n          <p>1-2학기 재학생만 가능, 신입생은 새로 등록해주세요. <br/>\n          Only for returning students, for new students please use the other <a href=\"/register\">form</a>.\n          </p>\n          <Form.Label><strong>부모 이메일 주소 | Parent Email</strong></Form.Label>\n          <Form.Row>\n            <Col>\n                <Form.Control required placeholder=\"abc@gmail.com\" type=\"email\"\n                    value={\n                        email ? email : ''\n                    }\n                    onChange={e => {\n                        setEmail(e.target.value);\n                    }}/>\n            </Col>\n            <Col>\n            <Button variant=\"info\" type=\"submit\">\n                Search\n            </Button>\n            </Col>\n          </Form.Row>\n        </Container>\n    </Form>\n    <Form onSubmit={handleRegister}>\n    <Container style={{marginTop:'10px'}}>\n      {results ? \n      <div>Found {results.length} student(s): <br/>\n        {results.map(element => \n        <b>{element.engName}<br/></b>)}\n        {results.length == 0 ? <p>Please register <a href=\"/register\">here</a>.</p>: <Button variant=\"success\" type=\"submit\" style={{marginTop:'10px'}}>\n          Reregister all\n        </Button> }\n      </div>\n      : ''\n      }\n    </Container>\n    </Form>\n    </Container>\n  )\n}\n\nexport default Home;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\nconst Confirmation = () => {\n  return (\n    <Container style={{marginTop:'50px'}}>\n        <h1>Confirmed</h1>\n        <p> 2 학기는 <strong>1/7/2020(금) 1/8/2020(토)</strong> 시작합니다.\n        <br/> 2nd Semester starts 1/7/2020(Friday) 1/8/2020(Saturday).</p>\n\n        <p>등록 해주셔서 감사합니다. 아래 주소로 우편을 이용하시거나 교무실로 직접가져오셔도 됩니다.\n        </p>\n\n        <p>Thank you for your registration.\n          You may bring your check to the first day of class at the school office or send your check through the mail. <br/>\n        <br/>Pay to the order of: \n        <br/>St. Andrew Kim Korean School \n        <br/>Address: 11700 1st Ave. NE, \n        <br/>Seattle WA 98125\n        <br/><strong>We do not accept cash.</strong></p>\n\n          <br></br>\n          Please email us at sakks10@gmail.com or call us at 206.362.2278 for any questions.\n          <br></br>\n         <p> We look forward to seeing you!</p>\n    </Container>\n  )\n}\n\nexport default Confirmation;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport Constants from '../constants';\n\nconst Home = () => {\n  return (\n    <div>\n        <br/>\n        <Alert variant='warning'>&#9432; The school is temporarily closed due to COVID-19.</Alert>\n        <Alert variant='success'>You may still access online classes by clicking \n        <a href=\"/class\"> here</a> and selecting your child's class. <br/><br/>\n        해당 자녀 <a href=\"/class\">수업반</a>을 들어가시면 온라인 수업/숙제를 보실 수 있습니다. </Alert>\n        <div className=\"jumbotron jumbotron-fluid bg-dark text-center\">\n        <div className=\"jumbotron-background\">\n            <img src=\"../students.jpg\" className=\"blur img-fluid \"/>\n        </div>\n        <div className=\"container text-white\">\n            <h1>St. Andrew Kim Korean School</h1>\n            <h2>성 김대건 한국 학교</h2><br></br>\n            <p>{Constants.year}</p>\n            <p><strong>Now accepting registrations</strong></p> \n            <p>\n            <Button variant=\"success\" href=\"/register\">등록 | Register</Button>\n            </p>\n            <p> OR </p>\n            <Button variant=\"primary\" href=\"/reregister\">재등록 | Reregister</Button>\n        </div>\n        </div>\n    </div>\n  )\n}\n\nexport default Home;","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAaoqIQyL3gQY75wvjJIOs0xfDNhTdArDM\",\n    authDomain: \"schooldb-9a633.firebaseapp.com\",\n    databaseURL: \"https://schooldb-9a633.firebaseio.com\",\n    projectId: \"schooldb-9a633\",\n    storageBucket: \"schooldb-9a633.appspot.com\",\n    messagingSenderId: \"992347550068\",\n    appId: \"1:992347550068:web:f45f21d8d4d78a5e\"\n  };\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.database();\nconst auth = firebase.auth();\n\nexport { firebase, db, auth};\n","import { useState, useEffect } from \"react\";\nimport { firebase } from \"../firebase\";\n\nfunction useAuth() {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        return firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                setUser({\n                    uid: user.uid,\n                    displayName: user.displayName,\n                    photoURL: user.photoURL,\n                    email: user.email\n                });\n            } else {\n                setUser(null);\n                // TODO: Navigate using reach\n            }\n            setLoading(false);\n        });\n    }, []);\n\n    return [user, loading];\n}\n\nexport default useAuth;\n","import React, {useState, useEffect} from 'react';\nimport useAuth from '../hooks/useAuth';\nimport { Container, Button, Col } from 'react-bootstrap';\nimport draftToHtml from \"draftjs-to-html\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, ContentState, convertToRaw, convertFromHTML } from \"draft-js\";\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nconst Write = ({\n    pageName,\n    firebaseRef,\n}) => {\n    const [user, loading] = useAuth();\n    const [toggle, setToggle] = useState(false); \n    const [editorContent, setEditorContent] = useState(\n        EditorState.createEmpty()\n    );\n    const [HTMLContent, setHTMLContent] = useState(\"\");\n    const [isSaving, setIsSaving] = useState(false);\n    const [errorSaving, setErrorSaving] = useState(\"\");\n    useEffect(() => {\n        firebaseRef.on(\"value\", snap => {\n            const firebaseData = snap.val() || { content: \"\" };\n            // console.log(firebaseData);\n\n            const { content } = firebaseData;\n            // default editor state to empty\n            // console.log(content);\n            let editorState = EditorState.createEmpty();\n            const { contentBlocks, entityMap } = convertFromHTML(content);\n\n            if (contentBlocks) {\n                // boilerplate code to generate the editor state from a string\n                // then store it into state\n                const contentState = ContentState.createFromBlockArray(\n                    contentBlocks,\n                    entityMap\n                );\n                // replace default editor state with actual state\n                editorState = EditorState.createWithContent(contentState);\n            }\n            setEditorContent(editorState);\n            setHTMLContent(content);\n            //setLoading(false);\n        });\n\n        return () => {\n            firebaseRef.off();\n        };\n    }, [pageName]);\n\n    const sendEditorContentToFirebase = async () => {\n        try {\n            setIsSaving(true);\n            let convertedToHtml = draftToHtml(\n                convertToRaw(editorContent.getCurrentContent())\n            );            \n            // console.log(convertedToHtml);\n            \n            //let lastEditedTime = firebase.database.ServerValue.TIMESTAMP;\n            const valueToSet = {\n                content: convertedToHtml,\n            }\n            await firebaseRef.set(valueToSet).then(() => {\n                setIsSaving(false);\n            });\n            setErrorSaving(\"\");\n            //setSavedLatestDataToFirebase(true);\n        } catch (e) {\n            // console.log(e);\n            setIsSaving(false);\n            setErrorSaving(e.message);\n        }\n    };\n    return (\n        <Container>\n        {\n            user&&user.email === \"sakks10@gmail.com\" ? \n            <Col>\n                <Button variant=\"outline-warning\" disabled={toggle} style={{float:'right'}}\n                    onClick={ e => setToggle(!toggle)}>&#9998;</Button>\n            </Col>\n            : undefined\n        }\n        { toggle ? \n            <Container> \n                <Editor\n                editorState={editorContent}\n                onEditorStateChange={e => {\n                    // if (savedLatestDataToFirebase) {\n                    //     setSavedLatestDataToFirebase(false);\n                    // }\n                    setEditorContent(e);\n                }}\n                toolbar={{\n                    options: [\n                        \"inline\",\n                        \"blockType\",\n                        \"fontSize\",\n                        \"list\",\n                        \"textAlign\",\n                        \"colorPicker\",\n                        \"link\",\n                        \"embedded\",\n                        \"emoji\",\n                        \"remove\",\n                        \"history\"\n                    ],\n                    }}\n                />\n                <Button variant=\"warning\" \n                    onClick={ e => {\n                    sendEditorContentToFirebase()\n                    setToggle(!toggle)}}>\n                    {isSaving ? \"Saving...\" : \"Save\" }</Button>\n                <p>{errorSaving}</p>\n            </Container>\n            : \n            <Container><div dangerouslySetInnerHTML={{ __html: HTMLContent }} /></Container>\n        }\n        </Container>\n    )\n}\n \nexport default Write;","import React from 'react';\nimport useAuth from '../hooks/useAuth';\nimport firebase from 'firebase';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Write from '../components/Write';\n\nconst About = () => {\n  const [user, loading] = useAuth();\n  const firebaseRef = firebase\n            .database()\n            .ref(`About`);\n  return (\n    <Container style={{marginTop:'50px'}}>\n      <Col><h2>About</h2></Col>\n        <Write pageName=\"About\" firebaseRef={firebaseRef}></Write>\n    </Container>\n  )\n}\n\nexport default About;","import React, { useState, useEffect } from 'react';\nimport firebase from \"firebase\";\nimport Constants from '../constants';\nimport { Row, Col } from 'react-bootstrap';\nimport Write from '../components/Write';\n\nconst ClassPage = (props) => {\n    const className = props.className;\n    const firebaseRef = firebase\n            .database()\n            .ref(`${className}/${Constants.year}`);\n  return (\n    <Row>\n        <Col><h2 style={{float:'left'}}>{className}</h2></Col>\n        <Write pageName={className} firebaseRef={firebaseRef}></Write>\n    </Row>\n  )\n}\n\nexport default ClassPage;","import React from 'react';\nimport { Container, Tab, Row, Col, Nav } from 'react-bootstrap';\nimport Constants from '../constants';\nimport ClassPage from './ClassPage';\n\nconst Class = () => {\n  return (\n    <Container style={{marginTop:'50px'}}>\n       <Tab.Container id=\"left-tabs\" defaultActiveKey=\"유치가 (금|토)\">\n        <Row>\n          <Col sm={3}>\n            <Nav variant=\"pills\" className=\"flex-column\">\n              {\n                Constants.classes.map(className => (\n                  <Nav.Item>\n                    <Nav.Link eventKey={className}>{className}</Nav.Link>\n                  </Nav.Item>\n                ))\n              }\n            </Nav>\n          </Col>\n          <Col sm={9}>\n            <Tab.Content>\n              { \n                Constants.classes.map(className => (\n                  <Tab.Pane eventKey={className}>\n                    <ClassPage className={className}></ClassPage>\n                  </Tab.Pane>\n                ))\n              }\n            </Tab.Content>\n          </Col>\n        </Row>\n      </Tab.Container>\n    </Container>\n  )\n}\n\nexport default Class;","import React, { useState } from 'react';\nimport firebase from 'firebase';\nimport { navigate } from \"@reach/router\";\nimport useAuth from \"../hooks/useAuth\";\n\nconst Login = () => {\n    const [user, loading] = useAuth();\n    const [authError, setAuthError] = useState(null);\n    const handleLogin = async () => {\n        const provider = new firebase.auth.GoogleAuthProvider();\n        try {\n            await firebase.auth().signInWithPopup(provider);\n            navigate(\"/\");\n        } catch (error) {\n            setAuthError(error.message);\n        }\n    };\n\n    const handleSignOut = async () => {\n        firebase\n            .auth()\n            .signOut()\n            .then(() => navigate(\"/\"));\n    };\n\n    if (user) { \n        return ( \n            <a href=\"/\" onClick={ e => {\n                e.preventDefault()\n                handleSignOut()\n            }}>Sign out</a>\n        )\n    }\n\n    return (\n        <a href=\"/\" onClick={ e => {\n            e.preventDefault()\n            handleLogin()\n        }}>Login as admin {authError && authError.message}</a>\n        // <p>{authError}</p>\n    )\n}\n\nexport default Login;","import React from 'react';\nimport { Router } from \"@reach/router\";\nimport './App.css';\nimport { Nav, Navbar, Container } from 'react-bootstrap';\nimport Register from './pages/Register';\nimport Reregister from './pages/Reregister';\nimport Confirmation from './pages/Confirmation';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Class from './pages/Class';\nimport ClassPage from './pages/ClassPage';\nimport Login from './pages/Login';\n\nconst App = () => {\n  return (\n    <div>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">St. Andrew Kim Korean School</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/\">Home</Nav.Link>\n            <Nav.Link href=\"/register\">Register</Nav.Link>\n            <Nav.Link href=\"/class\">Class</Nav.Link>\n            <Nav.Link href=\"/about\">About</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Router>\n        <Home path=\"/\"/>\n        <Register path=\"/register\" />\n        <Confirmation path=\"confirmation\"/>\n        <Reregister path=\"/reregister\"/>\n        <About path=\"/about\"/>\n        <Class path=\"/class\"/>\n        <ClassPage path=\"/class/*\"/>\n      </Router>\n      <Container style={{marginTop: '50px'}}>\n        <hr/>\n        <footer style={{color: 'gray'}}>\n          <p style={{fontSize:'13px'}}>© 2019 - St. Andrew Kim Korean School \n          <br/> <Login></Login></p>\n        </footer>\n      </Container>\n    </div>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./firebase\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}