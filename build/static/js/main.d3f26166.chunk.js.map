{"version":3,"sources":["hooks/useValidation.js","components/Step1.js","components/Student.js","hooks/useStudents.js","components/Step2.js","components/Stein.js","components/Finish.js","hooks/useSteps.js","hooks/useRegistration.js","constants.js","pages/Register.js","hooks/useSearch.js","pages/Reregister.js","pages/Confirmation.js","pages/Home.js","pages/About.js","pages/Class.js","App.js","serviceWorker.js","index.js"],"names":["useValidation","useState","Step1","steps","registrations","addCurrentStep","step","registration","backCurrentStep","setRegistration","validated","setValidated","addToRegistration","obj","parentInfo","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","Group","controlId","Label","Control","required","placeholder","type","value","parentName","onChange","e","target","email","Row","as","Col","phone","otherPhone","address","address2","city","state","undefined","zip","ButtonGroup","Button","variant","Student","props","studentList","setStudents","handleChange","fieldName","Container","style","borderColor","borderWidth","borderStyle","borderRadius","padding","backgroundColor","marginTop","krName","engName","birthdate","grade","Check","paddingLeft","inline","label","name","checked","gender","fluency","religion","dietaryNotes","comments","id","classDay","useStudents","students","Step2","onClick","marginLeft","store","SteinStore","writeRegistration","append","authentication","username","password","then","res","console","log","window","location","href","catch","err","a","read","search","data","writeToDatabase","student","searchDatabase","Finish","handleSubmit","Stein","float","useSteps","setSteps","useRegistration","currentStep","Register","Constants","useSearch","setEmail","results","setResults","Home","handleRegister","forEach","element","length","map","Confirmation","className","src","About","Class","App","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","path","Reregister","color","fontSize","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.d3f26166.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction useValidation() {\n    const [validation, setValidation] = useState(false);\n\n    return [validation, setValidation];\n}\n\nexport default useValidation;","import React from 'react';\nimport useValidation from '../hooks/useValidation';\nimport { Form, Col, Button, ButtonGroup } from 'react-bootstrap';\n\nconst Step1 = ({steps, registrations}) => {\n    const {step, addCurrentStep, backCurrentStep} = steps;\n    const {registration, setRegistration} = registrations;\n\n    const [validated, setValidated] = useValidation();\n    const handleSubmit = event => {\n        const form = event.currentTarget;\n        if (!form.checkValidity()) {\n            setValidated(true);\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            setValidated(false);\n            addCurrentStep();\n        }\n      };\n    const addToRegistration = (obj) => {\n        let parentInfo = {...registration, ...obj};\n        setRegistration(parentInfo);\n    }\n\n  return (\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n        <h3>Parent Information</h3>\n        <Form.Group controlId=\"formGridName\">\n            <Form.Label>성명 | Full Name *</Form.Label>\n            <Form.Control required placeholder=\"Name\" type=\"text\"\n                \n                value={\n                    registration.parentName ? registration.parentName : ''\n                }\n                onChange={e => {\n                    addToRegistration({parentName: e.target.value});\n                }}/>\n        </Form.Group>\n        <Form.Group controlId=\"formGridEmail\">\n            <Form.Label>Email *</Form.Label>\n            <Form.Control required type=\"email\" placeholder=\"Enter email\" \n                value={\n                    registration.email ? registration.email : ''\n                }\n                onChange={e => {\n                    addToRegistration({email: e.target.value});\n                }}/>\n        </Form.Group>\n        <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridPhone\">\n            <Form.Label>전화 번호 | Phone Number *</Form.Label>\n            <Form.Control required type=\"phone\" placeholder=\"Primary Phone #\" \n                value={\n                    registration.phone ? registration.phone : ''\n                }\n                onChange={e => {\n                    addToRegistration({phone: e.target.value});\n                }}/>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridPhone\">\n            <Form.Label>비상 연락 번호 | Emergency Phone Number</Form.Label>\n            <Form.Control type=\"phone\" placeholder=\"Emergency Phone #\" \n                value={\n                    registration.otherPhone ? registration.otherPhone : ''\n                }\n                onChange={e => {\n                    addToRegistration({otherPhone: e.target.value});\n                }}/>\n            </Form.Group>\n        </Form.Row>\n\n        <Form.Group controlId=\"formGridAddress1\">\n            <Form.Label>Address *</Form.Label>\n            <Form.Control required placeholder=\"1234 Main St\" \n                value={\n                    registration.address ? registration.address : ''\n                }\n                onChange={e => {\n                    addToRegistration({address: e.target.value});\n                }}/>\n        </Form.Group>\n\n        <Form.Group controlId=\"formGridAddress2\">\n            <Form.Label>Address 2</Form.Label>\n            <Form.Control placeholder=\"Apartment, studio, or floor\" \n                value={\n                    registration.address2 ? registration.address2 : ''\n                }\n                onChange={e => {\n                    addToRegistration({address2: e.target.value});\n                }}/>\n        </Form.Group>\n\n        <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridCity\">\n            <Form.Label>City *</Form.Label>\n            <Form.Control required placeholder=\"Seattle\"\n                value={\n                    registration.city ? registration.city : ''\n                }\n                onChange={e => {\n                    addToRegistration({city: e.target.value});\n                }}/>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridState\">\n            <Form.Label>State</Form.Label>\n            <Form.Control as=\"select\" required\n                value={\n                    registration.state ? registration.state : undefined\n                }\n                onChange={e => {\n                    addToRegistration({state: e.target.value});\n                }}>\n                <option>Choose...</option>\n                <option>WA</option>\n                <option>Other</option>\n            </Form.Control>\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridZip\">\n            <Form.Label>Zip *</Form.Label>\n            <Form.Control required \n                value={\n                    registration.zip ? registration.zip : ''\n                }\n                onChange={e => {\n                    addToRegistration({zip: e.target.value});\n                }}/>\n            </Form.Group>\n        </Form.Row>\n\n        <ButtonGroup>\n            <Button\n                variant=\"info\" \n                type=\"submit\"\n                >\n                Next >\n            </Button>\n        </ButtonGroup>\n    </Form>\n  )\n}\n\nexport default Step1;","import React from 'react';\nimport { Container, Form, Col, Button, ButtonGroup, Row } from 'react-bootstrap';\n\nconst Student = (props) => {\n    const {studentList, setStudents} = props;\n    const handleChange = (value, fieldName) => {\n        // let tempStudents = studentList; // [{},{},...]\n        // tempStudents = {...tempStudents, ...{[fieldName]: value}};\n        setStudents({...studentList, ...{[fieldName]: value}});\n    }\n\n  return (\n    <Container style={{\n        borderColor:'#DDDDDD', \n        borderWidth: '0.5px', \n        borderStyle:'solid', \n        borderRadius: '7px', \n        padding: '20px',\n        backgroundColor:'#F3F3F3',\n        marginTop:'10px'}}>\n    {/* <Form noValidate validated={validated}> */}\n        <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridName\">\n                <Form.Label>한글 성명 | Korean Name *</Form.Label>\n                <Form.Control required placeholder=\"Last First Name\" \n                    value={\n                        studentList.krName //!= '' ? studentList.krName : ''\n                    }\n                    onChange={e => {\n                        e.preventDefault();\n                        handleChange(e.target.value, 'krName');\n                    }} />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"formGridName\">\n                <Form.Label>영문 성명 | English Name *</Form.Label>\n                <Form.Control required placeholder=\"First Last Name\" \n                    value={\n                        studentList.engName != '' ? studentList.engName : ''\n                    }\n                    onChange={e => {\n                       // e.preventDefault();\n                        handleChange(e.target.value, 'engName');\n                    }}/>\n            </Form.Group>\n        </Form.Row> \n        <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridBirth\">\n                <Form.Label>Birthdate *</Form.Label>\n                <Form.Control required type=\"date\" \n                    value={\n                        studentList.birthdate != '' ? studentList.birthdate : ''\n                    }\n                    onChange={e => {\n                        handleChange(e.target.value, 'birthdate');\n                    }}/>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"formGridGrade\">\n                <Form.Label>학년 | Grade *</Form.Label>\n                <Form.Control required as=\"select\"\n                    value={\n                        studentList.grade != '' ? studentList.grade : undefined\n                    }\n                    onChange={e => {\n                        handleChange(e.target.value, 'grade');\n                    }}>\n                    <option>Choose...</option>\n                    <option>K</option>\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                    <option>6</option>\n                    <option>7</option>\n                    <option>8</option>\n                    <option>9</option>\n                    <option>10</option>\n                    <option>11</option>\n                    <option>12</option>\n                    <option>N/A</option>\n                </Form.Control>\n            </Form.Group>\n        </Form.Row>\n        <Form.Group>\n            <Form.Label>성별 | Gender *</Form.Label>\n            <Form.Check style={{paddingLeft:\"20px\"}}\n                required\n                inline\n                type=\"radio\"\n                label=\"F\"\n                name=\"formgender\"\n                checked={\n                    studentList.gender == 'F' ? \"checked\" : undefined\n                }\n                onChange={e => {\n                    handleChange('F', 'gender');\n                }}/>\n            <Form.Check\n                inline\n                type=\"radio\"\n                label=\"M\"\n                name=\"formgender\"\n                checked={\n                    studentList.gender == 'M' ? \"checked\" : undefined\n                }\n                onChange={e => {\n                    handleChange('M', 'gender');\n                }}/>\n        </Form.Group>\n        <Form.Group>\n            <Form.Label>한국어 능력 | Korean Fluency Level</Form.Label>\n                <Form.Check style={{paddingLeft:\"20px\"}}\n                    inline\n                    type=\"radio\"\n                    label=\"전혀 못함 (Not at all)\"\n                    name=\"formRadioSkill\"\n                    checked={\n                        studentList.fluency == \"전혀 못함 (Not at all)\" ? \"checked\" : undefined\n                    }\n                    onChange={e => {\n                        handleChange(\"전혀 못함 (Not at all)\", 'fluency');\n                    }}\n                />\n                <Form.Check\n                    inline\n                    type=\"radio\"\n                    label=\"조금 (A little)\"\n                    name=\"formRadioSkill\" \n                    checked={\n                        studentList.fluency == \"조금 (A little)\" ? \"checked\" : undefined\n                    }\n                    onChange={e => {\n                        handleChange( \"조금 (A little)\", 'fluency');\n                    }}\n                />\n                <Form.Check\n                    inline\n                    type=\"radio\"\n                    label=\"잘함 (Well)\"\n                    name=\"formRadioSkill\"\n                    checked={\n                        studentList.fluency == \"잘함 (Well)\" ? \"checked\" : undefined\n                    }\n                    onChange={e => {\n                        let fluency = {current:{value: \"잘함 (Well)\"}}\n                        handleChange(\"잘함 (Well)\", 'fluency');\n                    }}\n                />\n        </Form.Group>\n        <Form.Group controlId=\"formGridReligion\">\n            <Form.Label>종교 | Religion</Form.Label>\n            <Form.Control \n                value={\n                    studentList.religion != '' ? studentList.religion : ''\n                }\n                onChange={e => {\n                    handleChange(e.target.value, 'religion');\n                }} />\n        </Form.Group>\n        <Form.Group controlId=\"formGridDietary\">\n            <Form.Label>음식물 규정식 사항 | Dietary Notes</Form.Label>\n            <Form.Control placeholder=\"Peanut allergy, etc\" \n                value={\n                    studentList.dietaryNotes != '' ? studentList.dietaryNotes : ''\n                }\n                onChange={e => {\n                    handleChange(e.target.value, 'dietaryNotes');\n                }}/>\n        </Form.Group>\n\n        <Form.Group controlId=\"formGridNote\">\n            <Form.Label>비고 | Other comments</Form.Label>\n            <Form.Control \n                value={\n                    studentList.comments != '' ? studentList.comments : ''\n                }\n                onChange={e => {\n                    handleChange(e.target.value, 'comments');\n                }}/>\n        </Form.Group>\n\n        <Form.Group id=\"formGridClass\">\n        <Form.Label><b>희망하는 수업일 | Day of Class *</b></Form.Label>\n            <Form.Check style={{paddingLeft:\"20px\"}}\n                required\n                inline\n                type=\"radio\"\n                label=\"금 | Friday\"\n                name=\"formRadioClass\"\n                checked={\n                    studentList.classDay == \"금\" ? \"checked\" : undefined\n                }\n                onChange={e => {\n                    handleChange(\"금\", 'classDay');\n                }}\n            />\n            <Form.Check\n                inline\n                type=\"radio\"\n                label=\"토 | Saturday\"\n                name=\"formRadioClass\"\n                checked={\n                    studentList.classDay == \"토\" ? \"checked\" : undefined\n                }\n                onChange={e => {\n                    handleChange(\"토\", 'classDay');\n                }}\n            />\n        </Form.Group>\n    {/* </Form> */}\n    </Container>\n  )\n}\n\nexport default Student","import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nimport Student from '../components/Student';\n\nfunction useStudents() {\n    const [students, setStudents] = useState({\n        krName: '',\n        engName: '',\n        birthdate: '',\n        grade: '',\n        gender: '',\n        fluency: '',\n        religion: '',\n        dietaryNotes: '',\n        comments: '',\n        classDay: '',\n    });\n\n    // function addStudent() {\n    //     setStudents(students+1);\n    // }\n\n    // function removeStudent() {\n    //     setStudents(students-1);\n    // // }\n    // function getStudents(registrations) {\n    //     let s = [];\n    //     console.log(students);\n    //     for(let i=0;i<students;i++) {\n    //         console.log(\"showing student \" + i);\n    //         s.push(<Student key={i} registrations={registrations} studentCount={i}></Student>);\n    //     }\n    //     return s;\n    // }\n    return {students, setStudents};\n}\n\nexport default useStudents;","import React from 'react';\nimport { Form, Container, Button, ButtonGroup, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport useStudents from '../hooks/useStudents';\nimport useValidation from '../hooks/useValidation';\nimport Student from './Student';\n\nconst Step2 = ({steps, studentList}) => {\n    const {step, addCurrentStep, backCurrentStep} = steps;\n    const {students, setStudents} = studentList;\n    const [validated, setValidated] = useValidation();\n\n    // const handleAdd = () => {\n    //     let curStudents = students.concat([{}]);\n    //     setStudents(curStudents);\n    //     console.log(students);\n    // }\n\n    // const handleRemove = () => {\n    //     let tempStudents = students;\n    //     tempStudents.pop();\n    //     setStudents(tempStudents);\n    // }\n    \n    const handleSubmit = event => {\n        const form = event.currentTarget;\n        if (!form.checkValidity()) {\n            setValidated(true);\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            setValidated(false);\n            addCurrentStep();\n        }\n      };\n    // const getStudents = () => {\n    //     for(let i = 0; i < students.length; i++) {\n    //         console.log()\n    //         return <Student key={i} studentList={students} setStudents={setStudents} studentCount={i}></Student>\n    //     }\n    // }\n  return (\n    <div>\n        <h3>Student Information</h3>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n        <Student studentList={students} setStudents={setStudents}></Student>\n        <div>\n        <br></br>\n        {/* <OverlayTrigger\n            key=\"right\"\n            placement=\"right\"\n            overlay={\n                <Tooltip id={'tooltip-right'}>\n                등록 추가 | Add another student \n                </Tooltip>\n                }\n        >\n        <Button  \n            onClick={e => {\n                e.preventDefault();\n                handleAdd();\n            }}\n            variant=\"outline-success\">\n            + Add\n        </Button>\n        </OverlayTrigger>\n        {\n            students > 1 && \n            <Button \n                style={{marginLeft:\"5px\"}} \n                onClick={e => {\n                    e.preventDefault();\n                    handleRemove();\n                }}\n                variant=\"outline-danger\">\n                - Remove\n            </Button>\n        } */}\n        </div>\n        <br></br>\n        <ButtonGroup>\n            <Button \n                variant=\"info\" \n                onClick={e => {\n                    e.preventDefault();\n                    backCurrentStep();\n                }}>\n                &lt; Previous\n            </Button>\n            <Button\n                style={{marginLeft:'5px'}}\n                variant=\"info\"\n                type=\"submit\" \n                >\n                Next >\n            </Button>\n        </ButtonGroup>\n        </Form>\n    </div>\n  )\n}\n\nexport default Step2;","import SteinStore from 'stein-js-client';\n\nconst store = new SteinStore(\n    \"https://api.steinhq.com/v1/storages/5d3fb20987c49c04cac13693\"\n);\nconst username = \"admin\"; //this is so bad\nconst password = \"Office925\"; //this is also super bad\n\nfunction writeToDatabase(parentInfo, student) {\n    let registration = {...parentInfo, ...student};\n    writeRegistration(registration);\n}\n\nfunction writeRegistration(registration) {\n    store.append(\"Database\", [registration], \n    {\n        authentication: { username: username, password: password }\n    })\n    .then(res => {\n        console.log(res);\n        {window.location.href='/confirmation'};\n    }).catch(err => {\n        console.log(err);\n        {window.location.href='/confirmation'};\n    });\n}\n\nasync function searchDatabase(email) {\n    console.log(\"em: \" + email);\n    return await store.read(\"Semester1\",     {\n        authentication: { username: username, password: password },\n        search: { email: email }\n    })\n    .then(data => {\n        // console.log(\"Found \" + data.length + \" student(s): \");\n        // data.forEach(element => {\n        //     console.log(element.engName);\n        // });\n        // console.log(\" Would you like to re-register them?\");\n        return data;\n      }).catch(err => {\n        console.log(err);\n    });\n}\n\nexport default {writeToDatabase, searchDatabase, writeRegistration};","import React from 'react';\nimport { Form, Button, ButtonGroup, Container } from 'react-bootstrap';\nimport Stein from './Stein';\nimport useValidation from '../hooks/useValidation';\n\nconst Finish = ({steps, registrations, studentList}) => {\n  const {step, addCurrentStep, backCurrentStep} = steps;\n  const {registration, setRegistration} = registrations;    \n  const {students, setStudents} = studentList;\n\n  const [validated, setValidated] = useValidation();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    if (!form.checkValidity()) {\n      setValidated(true);\n      event.stopPropagation();\n    } else {\n      setValidated(false);\n      await Stein.writeToDatabase(registration, students);\n    }\n  }; \n\n  return (\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n        <Container>\n          <h3>Registration Summary</h3>\n          Registering for: {students.krName + \" (\" + students.engName + \")\"} <br/>\n          <h4>Terms and Conditions</h4>\n            한국 학교 교장 귀하 (To: Head of the School)<br/><br/>\n            저는 위의 학생을 귀교에 입학시키기를 원하며 학부모로서의 의무를 충실히 이행할 것을 서약합니다.\n            <br/>(I would like to register our child in your school and promise to support the academic & extracurricular activites of your school.) \n            <br/>\n            또한 학생들 간식준비를 위해 기꺼이 도울것을 약속합니다. \n            <br/>(I also agree to volunteer to prepare and assist during the students' snack time.)\n            <br/>\n            <br/>\n            <br/>\n        <Form.Group id=\"formGridCheckbox\">\n            <Form.Check type=\"checkbox\" label=\"동의 합니다 (I agree with the Terms and Conditions)\" required/>\n        </Form.Group>\n        </Container>\n       \n\n          <Button \n              inline\n              variant=\"info\" \n              onClick={e => {\n                  e.preventDefault()\n                  backCurrentStep();\n              }}>\n              &lt; Previous\n          </Button>\n          <Button inline variant=\"success\" \n            style={{float:'right'}}\n            type=\"submit\"\n          //   onClick={async e =>{\n          //    e.preventDefault()\n          //  //  e.target.value = \"check\";\n          //    await handleSubmit(e);\n          //   }}\n            >\n            Submit\n          </Button>\n    </Form>\n  )\n}\n\nexport default Finish;","import { useState, useEffect } from \"react\";\n\nfunction useSteps() {\n    const [step, setSteps] = useState(1);\n\n    function addCurrentStep() {\n        setSteps(step+1);\n    }\n\n    function backCurrentStep() {\n        setSteps(step-1);\n    }\n\n    return {step, addCurrentStep, backCurrentStep};\n}\n\nexport default useSteps;","import { useState, useEffect } from \"react\";\n\nfunction useRegistration(currentStep) {\n    const [registration, setRegistration] = useState({});\n    // const [studentInfo, setStudentInfo] = useState([{}]);\n    // function addToRegistration(newInfo) {\n    //     setRegistration({...registration, ...newInfo});\n    // }\n\n    // function addStudentToRegistration(newStudentInfo) { // [{},{}]\n    //     setStudentInfo(newStudentInfo);\n    //     // let students = [];\n    //     // if(registration.students !== undefined) {\n    //     //     students = registration.students.concat(newStudentInfo);\n    //     // }\n    //    //setRegistration({...registration, ...{students: newStudentInfo}});\n    // }\n\n    return {\n        registration, \n        setRegistration\n        // addToRegistration,\n        // studentInfo,\n        // addStudentToRegistration\n    };\n}\n\nexport default useRegistration;","export default {\n    year: '2019-2020 2학기 | 2nd Semester',\n}","import React from 'react';\nimport Step1 from '../components/Step1';\nimport Step2 from '../components/Step2';\nimport Finish from '../components/Finish';\nimport useSteps from '../hooks/useSteps';\nimport useRegistration from '../hooks/useRegistration';\n\nimport { Container } from 'react-bootstrap';\nimport Constants from '../constants';\nimport useStudents from '../hooks/useStudents';\n\nconst Register = () => {\n  const {step, addCurrentStep, backCurrentStep} = useSteps();\n  const {registration, setRegistration} = useRegistration();\n  const {students, setStudents} = useStudents();\n\n  return (\n    <Container style={{marginTop:'50px'}}>\n      <h1>Registration</h1>\n      <h4>{Constants.year}</h4>\n      <br></br>\n      <Container style={{backgroundColor: '#eee', borderRadius: '7px', padding: '20px'}}>\n        {\n          step === undefined && <p>Loading...</p>\n        }\n        {\n          step === 1 && <Step1 \n            steps={{step, addCurrentStep, backCurrentStep}}\n            registrations={{registration, setRegistration}}>\n          </Step1>\n        }\n        {\n          step === 2 && <Step2  \n            steps={{step, addCurrentStep, backCurrentStep}}\n            studentList={{students, setStudents}}>\n          </Step2>\n        }\n        {\n          step === 3 && <Finish \n            steps={{step, addCurrentStep, backCurrentStep}}\n            registrations={{registration, setRegistration}}\n            studentList={{students, setStudents}}>\n          </Finish>\n        }\n      </Container>\n    </Container>\n  )\n}\n\nexport default Register;","import { useState, useEffect } from \"react\";\n\nfunction useSearch() {\n    const [email, setEmail] = useState('');\n    const [results, setResults] = useState(undefined);\n\n    return {\n        email, setEmail, results, setResults\n    };\n}\n\nexport default useSearch;","import React from 'react';\nimport Constants from '../constants';\nimport useSearch from '../hooks/useSearch';\nimport Stein from '../components/Stein';\nimport { Form, Container, Button, Col } from 'react-bootstrap';\n\nconst Home = () => {\n    const {email, setEmail, results, setResults} = useSearch();\n    const handleSubmit = async event => {\n        event.preventDefault();\n        console.log(email);\n        const results = await Stein.searchDatabase(email);\n        console.log(results);\n        setResults(results);\n    };\n  const handleRegister = async event => {\n    event.preventDefault();\n    results.forEach(async element => {\n      console.log(element);\n      await Stein.writeRegistration(element);\n    });\n  };\n  return (\n    <Container style={{marginTop:'50px'}}>\n    <Form onSubmit={handleSubmit}>\n        <Container>\n          <h2>재등록 | Reregister </h2>\n          <h4>{Constants.year}</h4>\n          <p>1-2학기 재학생만 가능, 신입생은 새로 등록해주세요. <br/>\n          Only for returning students, for new students please use the other <a href=\"/register\">form</a>.\n          </p>\n          <Form.Label><strong>부모 이메일 주소 | Parent Email</strong></Form.Label>\n          <Form.Row>\n            <Col>\n                <Form.Control required placeholder=\"abc@gmail.com\" type=\"email\"\n                    value={\n                        email ? email : ''\n                    }\n                    onChange={e => {\n                        setEmail(e.target.value);\n                    }}/>\n            </Col>\n            <Col>\n            <Button variant=\"info\" type=\"submit\">\n                Search\n            </Button>\n            </Col>\n          </Form.Row>\n        </Container>\n    </Form>\n    <Form onSubmit={handleRegister}>\n    <Container style={{marginTop:'10px'}}>\n      {results ? \n      <div>Found {results.length} student(s): <br/>\n        {results.map(element => \n        <b>{element.engName}<br/></b>)}\n        {results.length == 0 ? <p>Please register <a href=\"/register\">here</a>.</p>: <Button variant=\"success\" type=\"submit\" style={{marginTop:'10px'}}>\n          Reregister all\n        </Button> }\n      </div>\n      : ''\n      }\n    </Container>\n    </Form>\n    </Container>\n  )\n}\n\nexport default Home;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\nconst Confirmation = () => {\n  return (\n    <Container style={{marginTop:'50px'}}>\n        <h1>Confirmed</h1>\n        <p> 2 학기는 <strong>1/7/2020(금) 1/8/2020(토)</strong> 시작합니다.\n        <br/> 2nd Semester starts 1/7/2020(Friday) 1/8/2020(Saturday).</p>\n\n        <p>등록 해주셔서 감사합니다. 아래 주소로 우편을 이용하시거나 교무실로 직접가져오셔도 됩니다.\n        </p>\n\n        <p>Thank you for your registration.\n          You may bring your check to the first day of class at the school office or send your check through the mail. <br/>\n        <br/>Pay to the order of: \n        <br/>St. Andrew Kim Korean School \n        <br/>Address: 11700 1st Ave. NE, \n        <br/>Seattle WA 98125\n        <br/><strong>We do not accept cash.</strong></p>\n\n          <br></br>\n          Please email us at sakks10@gmail.com or call us at 206.362.2278 for any questions.\n          <br></br>\n         <p> We look forward to seeing you!</p>\n    </Container>\n  )\n}\n\nexport default Confirmation;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport Constants from '../constants';\n\nconst Home = () => {\n  return (\n    <div>\n        <br/>\n        <Alert variant='warning'>Closed</Alert>\n        <div className=\"jumbotron jumbotron-fluid bg-dark text-center\">\n        <div className=\"jumbotron-background\">\n            <img src=\"../students.jpg\" className=\"blur img-fluid \"/>\n        </div>\n        <div className=\"container text-white\">\n            <h1>St. Andrew Kim Korean School</h1>\n            <h2>성 김대건 한국 학교</h2><br></br>\n            <p>{Constants.year}</p>\n            <p><strong>Registration closed</strong></p> \n            <p>\n            {/* <Button variant=\"success\" href=\"/register\">등록 | Register</Button> */}\n            </p>\n            {/* <p> OR </p>\n            <Button variant=\"primary\" href=\"/reregister\">재등록 | Reregister</Button> */}\n        </div>\n        </div>\n    </div>\n  )\n}\n\nexport default Home;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\nconst About = () => {\n  return (\n    <Container style={{marginTop:'50px'}}>\n        <h1>About</h1>\n        <p> 2 학기는 <strong>1/7/2020(금) 1/8/2020(토)</strong> 시작합니다.\n        <br/> 2nd Semester starts 1/7/2020(Friday) 1/8/2020(Saturday).</p>\n\n        <p>등록 해주셔서 감사합니다. 아래 주소로 우편을 이용하시거나 교무실로 직접가져오셔도 됩니다.\n        </p>\n\n        <p>Thank you for your registration.\n          You may bring your check to the first day of class at the school office or send your check through the mail. <br/>\n        <br/>Pay to the order of: \n        <br/>St. Andrew Kim Korean School \n        <br/>Address: 11700 1st Ave. NE, \n        <br/>Seattle WA 98125\n        <br/><strong>We do not accept cash.</strong></p>\n\n          <br></br>\n          Please email us at sakks10@gmail.com or call us at 206.362.2278 for any questions.\n          <br></br>\n         <p> We look forward to seeing you!</p>\n    </Container>\n  )\n}\n\nexport default About;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\nconst Class = () => {\n  return (\n    <Container style={{marginTop:'50px'}}>\n       \n    </Container>\n  )\n}\n\nexport default Class;","import React from 'react';\nimport { Router } from \"@reach/router\";\n\nimport './App.css';\nimport { Nav, Navbar, Container } from 'react-bootstrap';\nimport Register from './pages/Register';\nimport Reregister from './pages/Reregister';\nimport Confirmation from './pages/Confirmation';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Class from './pages/Class';\n\nconst App = () => {\n  return (\n    <div>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">St. Andrew Kim Korean School</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/\">Home</Nav.Link>\n            <Nav.Link href=\"/register\">Register</Nav.Link>\n            <Nav.Link href=\"/about\">About</Nav.Link>\n            <Nav.Link href=\"/class\">Class</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Router>\n        <Home path=\"/\"/>\n        <Register path=\"/register\" />\n        <Confirmation path=\"confirmation\"/>\n        <Reregister path=\"/reregister\"/>\n        <About path=\"/about\"/>\n        <Class path=\"/class\"/>\n      </Router>\n      <Container style={{marginTop: '50px'}}>\n        <hr/>\n        <footer style={{color: 'gray'}}>\n          <p style={{fontSize:'13px'}}>© 2020 - St. Andrew Kim Korean School </p>\n        </footer>\n      </Container>\n    </div>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}